// @generated by protoc-gen-es v1.5.0
// @generated from file agoric/lien/lien.proto (package agoric.lien, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Coin } from "../../cosmos/base/v1beta1/coin_pb.js";

/**
 * Lien contains the lien state of a particular account.
 *
 * @generated from message agoric.lien.Lien
 */
export declare class Lien extends Message<Lien> {
  /**
   * coins holds the amount liened
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin coins = 1;
   */
  coins: Coin[];

  /**
   * delegated tracks the net amount delegated for non-vesting accounts,
   * or zero coins for vesting accounts.
   * (Vesting accounts have their own fields to track delegation.)
   *
   * @generated from field: repeated cosmos.base.v1beta1.Coin delegated = 2;
   */
  delegated: Coin[];

  constructor(data?: PartialMessage<Lien>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "agoric.lien.Lien";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Lien;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Lien;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Lien;

  static equals(a: Lien | PlainMessage<Lien> | undefined, b: Lien | PlainMessage<Lien> | undefined): boolean;
}

