// @generated by protoc-gen-es v1.5.0
// @generated from file agoric/vstorage/vstorage.proto (package agoric.vstorage, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Data is the vstorage node data.
 *
 * @generated from message agoric.vstorage.Data
 */
export declare class Data extends Message<Data> {
  /**
   * @generated from field: string value = 1;
   */
  value: string;

  constructor(data?: PartialMessage<Data>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "agoric.vstorage.Data";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Data;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Data;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Data;

  static equals(a: Data | PlainMessage<Data> | undefined, b: Data | PlainMessage<Data> | undefined): boolean;
}

/**
 * Children are the immediate names (just one level deep) of subnodes leading to
 * more data from a given vstorage node.
 *
 * @generated from message agoric.vstorage.Children
 */
export declare class Children extends Message<Children> {
  /**
   * @generated from field: repeated string children = 1;
   */
  children: string[];

  constructor(data?: PartialMessage<Children>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "agoric.vstorage.Children";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Children;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Children;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Children;

  static equals(a: Children | PlainMessage<Children> | undefined, b: Children | PlainMessage<Children> | undefined): boolean;
}

