// @generated by protoc-gen-es v1.5.0
// @generated from file agoric/vbank/query.proto (package agoric.vbank, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Params, State } from "./vbank_pb.js";

/**
 * QueryParamsRequest is the request type for the Query/Params RPC method.
 *
 * @generated from message agoric.vbank.QueryParamsRequest
 */
export declare class QueryParamsRequest extends Message<QueryParamsRequest> {
  constructor(data?: PartialMessage<QueryParamsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "agoric.vbank.QueryParamsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsRequest;

  static equals(a: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined, b: QueryParamsRequest | PlainMessage<QueryParamsRequest> | undefined): boolean;
}

/**
 * QueryParamsResponse is the response type for the Query/Params RPC method.
 *
 * @generated from message agoric.vbank.QueryParamsResponse
 */
export declare class QueryParamsResponse extends Message<QueryParamsResponse> {
  /**
   * params defines the parameters of the module.
   *
   * @generated from field: agoric.vbank.Params params = 1;
   */
  params?: Params;

  constructor(data?: PartialMessage<QueryParamsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "agoric.vbank.QueryParamsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryParamsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryParamsResponse;

  static equals(a: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined, b: QueryParamsResponse | PlainMessage<QueryParamsResponse> | undefined): boolean;
}

/**
 * QueryStateRequest is the request type for the Query/State RPC method.
 *
 * @generated from message agoric.vbank.QueryStateRequest
 */
export declare class QueryStateRequest extends Message<QueryStateRequest> {
  constructor(data?: PartialMessage<QueryStateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "agoric.vbank.QueryStateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryStateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryStateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryStateRequest;

  static equals(a: QueryStateRequest | PlainMessage<QueryStateRequest> | undefined, b: QueryStateRequest | PlainMessage<QueryStateRequest> | undefined): boolean;
}

/**
 * QueryStateResponse is the response type for the Query/State RPC method.
 *
 * @generated from message agoric.vbank.QueryStateResponse
 */
export declare class QueryStateResponse extends Message<QueryStateResponse> {
  /**
   * state defines the parameters of the module.
   *
   * @generated from field: agoric.vbank.State state = 1;
   */
  state?: State;

  constructor(data?: PartialMessage<QueryStateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "agoric.vbank.QueryStateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryStateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryStateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryStateResponse;

  static equals(a: QueryStateResponse | PlainMessage<QueryStateResponse> | undefined, b: QueryStateResponse | PlainMessage<QueryStateResponse> | undefined): boolean;
}

