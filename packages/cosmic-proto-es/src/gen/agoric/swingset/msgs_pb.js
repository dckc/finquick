// @generated by protoc-gen-es v1.5.0
// @generated from file agoric/swingset/msgs.proto (package agoric.swingset, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * MsgDeliverInbound defines an SDK message for delivering an eventual send
 *
 * @generated from message agoric.swingset.MsgDeliverInbound
 */
export const MsgDeliverInbound = proto3.makeMessageType(
  "agoric.swingset.MsgDeliverInbound",
  () => [
    { no: 1, name: "messages", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "nums", kind: "scalar", T: 4 /* ScalarType.UINT64 */, repeated: true },
    { no: 3, name: "ack", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 4, name: "submitter", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * MsgDeliverInboundResponse is an empty reply.
 *
 * @generated from message agoric.swingset.MsgDeliverInboundResponse
 */
export const MsgDeliverInboundResponse = proto3.makeMessageType(
  "agoric.swingset.MsgDeliverInboundResponse",
  [],
);

/**
 * MsgWalletAction defines an SDK message for the on-chain wallet to perform an
 * action that *does not* spend any assets (other than gas fees/stamps).  This
 * message type is typically protected by feegrant budgets.
 *
 * @generated from message agoric.swingset.MsgWalletAction
 */
export const MsgWalletAction = proto3.makeMessageType(
  "agoric.swingset.MsgWalletAction",
  () => [
    { no: 1, name: "owner", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "action", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgWalletActionResponse is an empty reply.
 *
 * @generated from message agoric.swingset.MsgWalletActionResponse
 */
export const MsgWalletActionResponse = proto3.makeMessageType(
  "agoric.swingset.MsgWalletActionResponse",
  [],
);

/**
 * MsgWalletSpendAction defines an SDK message for the on-chain wallet to
 * perform an action that *does spend the owner's assets.*  This message type is
 * typically protected by explicit confirmation by the user.
 *
 * @generated from message agoric.swingset.MsgWalletSpendAction
 */
export const MsgWalletSpendAction = proto3.makeMessageType(
  "agoric.swingset.MsgWalletSpendAction",
  () => [
    { no: 1, name: "owner", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 2, name: "spend_action", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * MsgWalletSpendActionResponse is an empty reply.
 *
 * @generated from message agoric.swingset.MsgWalletSpendActionResponse
 */
export const MsgWalletSpendActionResponse = proto3.makeMessageType(
  "agoric.swingset.MsgWalletSpendActionResponse",
  [],
);

/**
 * MsgProvision defines an SDK message for provisioning a client to the chain
 *
 * @generated from message agoric.swingset.MsgProvision
 */
export const MsgProvision = proto3.makeMessageType(
  "agoric.swingset.MsgProvision",
  () => [
    { no: 1, name: "nickname", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "address", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "power_flags", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "submitter", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ],
);

/**
 * MsgProvisionResponse is an empty reply.
 *
 * @generated from message agoric.swingset.MsgProvisionResponse
 */
export const MsgProvisionResponse = proto3.makeMessageType(
  "agoric.swingset.MsgProvisionResponse",
  [],
);

/**
 * MsgInstallBundle carries a signed bundle to SwingSet.
 *
 * @generated from message agoric.swingset.MsgInstallBundle
 */
export const MsgInstallBundle = proto3.makeMessageType(
  "agoric.swingset.MsgInstallBundle",
  () => [
    { no: 1, name: "bundle", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "submitter", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 3, name: "compressed_bundle", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
    { no: 4, name: "uncompressed_size", kind: "scalar", T: 3 /* ScalarType.INT64 */ },
  ],
);

/**
 * MsgInstallBundleResponse is an empty acknowledgement that an install bundle
 * message has been queued for the SwingSet kernel's consideration.
 *
 * @generated from message agoric.swingset.MsgInstallBundleResponse
 */
export const MsgInstallBundleResponse = proto3.makeMessageType(
  "agoric.swingset.MsgInstallBundleResponse",
  [],
);

